// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id         String    @id @default(uuid())
  email      String    @unique
  name       String
  avatar_url String?
  created_at DateTime  @default(now())
  accounts   Account[]
  sessions   Session[]
  Reviews    Reviews[]

  @@map("users")
}

model Account {
  id                  String  @id @default(cuid())
  user_id             String
  type                String
  provider            String
  provider_account_id String
  refresh_token       String? @db.Text
  access_token        String? @db.Text
  expires_at          Int?
  token_type          String?
  scope               String?
  id_token            String? @db.Text
  session_state       String?
  user                User    @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@unique([provider, provider_account_id])
  @@index([user_id])
  @@map("accounts")
}

model Session {
  id            String   @id @default(cuid())
  session_token String   @unique
  user_id       String
  expires       DateTime
  user          User     @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@index([user_id])
  @@map("sessions")
}

model Books {
  id          String @id @default(uuid())
  name        String
  author      String
  summary     String @db.Text
  total_pages Int
  category    String

  created_at DateTime  @default(now())
  Reviews    Reviews[]

  @@map("books")
}

model Reviews {
  id      String @id @default(uuid())
  rating  Int
  comment String @db.Text

  user    User   @relation(fields: [user_id], references: [id])
  user_id String

  books      Books    @relation(fields: [book_id], references: [id])
  book_id    String
  created_at DateTime @default(now())

  @@index([user_id])
  @@index([book_id])
  @@map("reviews")
}
